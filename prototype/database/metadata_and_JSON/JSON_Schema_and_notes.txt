JSON format notes:
>As we discussed on Tuesday, the only comparitor we could find that would work for "ordering" photos in a unique fashion is a datetime (down to the miliseconds).
	>All of our comparisons in the backend will be made via the photo_datetime.
>The photo_datetime may not be safe for insertion into URLs -  it contains special characters. Encode using javascript first if you plan to use $_GET.
	> On that note, *tell us* which you plan to use out of $_GET, $_POST, etc. per-call-type.

JSON object example:
{
  "photo_url": "http://fakeuser.blob.core.windows.net/user1/imageofpage2016-02-07T19-47-04-10119",
  "photo_datetime": "2016-02-07T19:47:04.101198",
  "user_id": "user1uniqueidentifier",
  "original_file_name": "imageofpage.jpg",
  "tags": [
    "bill",
    "scary",
    "horror"
  ]
}


*****************What front-end teams need to store and send (with examples):

!! You need to store the last "photo_datetime" on top of a stack datatype.
	>When a user clicks "next," send us the last datetime from the top of the stack, leaveing it on the stack.
	>When we send back 20 more, get the last item from the JSON, and store its datetime on top of the stack.
	>When a user clicks "last," remove the last datetime from the top of the stack, and discard it. THEN, get a second datetime from the top of the stack (but leave it on the stack), and send it to us.
	
Example using dates: 

Example Stack contains (from bottom to top): "2016-02-07T19:47:04.101198", "2016-02-09T18:42:04.000000", "2016-02-010T19:47:04.009533".

> A user clicks "next." You would send us the string on top, "2016-02-010T19:47:04.009533", and we will send you back JSON for 20 objects. 
>Get the photo_datetime from the last item in the JSON, and add it to the top of the stack.

Example Stack now contains (from bottom to top): "2016-02-07T19:47:04.101198", "2016-02-09T18:42:04.000000", "2016-02-010T19:47:04.009533", "2016-02-011T00:47:04.099999"

> A user clicks "back." You would first remove the string on top.

Example Stack now contains (from bottom to top): "2016-02-07T19:47:04.101198", "2016-02-09T18:42:04.000000", "2016-02-010T19:47:04.009533".

Now, send us the string on top, which would be "2016-02-010T19:47:04.009533"
We'll send you 20 objects to list, just like we would've if you'd clicked "next." No need to store old photo URLs, we'll send them to you.

UI Suggestion: if the stack is empty, disable the "back" button.
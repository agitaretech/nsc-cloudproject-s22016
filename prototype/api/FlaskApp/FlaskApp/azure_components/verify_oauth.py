# RJ Hunter
# AD 440
# Cloud Practicum
# 
# file contains method to call twitter api and verify credentials of the
# app user.   
# 

import requests
from static.app_keys import oauth_consumer_key, oauth_consumer_secret 
from requests_oauthlib import OAuth1

# method calls twitter api and verifys a user's credentials.  The method
# will return a HTTP status code (200 for success, 401 for error). The
# method uses 2 parameters (access token, access token secret). The
# access token and secret are generated by the web/mobile client when
# logging into the app using twitter. These parameters will be handed
# to the server side api when making any requests.
def verifyOauth(access_token,access_token_secret):
    # consumer key and secret.  these keys are generated when creating
    # our twitter app on the twitter developer portal.  They are needed
    # when verifing twitter credentials
    try:
        consumer_key= oauth_consumer_key
        consumer_secret= oauth_consumer_secret 

        # url of twitter api that verifys a users credentials
        url = 'https://api.twitter.com/1.1/account/verify_credentials.json'
        # oAuth1 method that creates an authorization object to hand to
        # twitters api
        auth = OAuth1(consumer_key, consumer_secret, access_token, access_token_secret)

        # gets request from twitter api
        # returns json result from request
        rtnVerifyCode = requests.get(url, auth=auth)
        return rtnVerifyCode.status_code
    except Exception:
        return "error"

# main method
def main():
    
    # access token and secret are generated by the web client.  These tokens are used
    # to verify user's credentials 
    access_token='4800385332-ZbrU1XfignI2lA3MjQu7U8KbIkTdYAdj1ArMVFR'
    access_token_secret='BPSs4gwICptsGVZQc9F2EpWcw6ar1gsv4Nlnqvq5PFIdF'
    # call method and print result
    #print(verify_oauth(access_token,access_token_secret))
    print(verify_oauth(access_token,access_token_secret))

# call main
if __name__ == "__main__":
    main()
